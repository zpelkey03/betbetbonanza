import React, { useState } from 'react';
import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from "firebase/auth";
import { useNavigate } from 'react-router-dom';
import { toast, ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

//This Log In component was generated by tailwindcss
//https://tailwindcomponents.com/component/login-page-with-image


//TODO: Use react-toast for error checking db elements 

function LogInComponent() {


  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName] = useState('');

  //Used for Routing 
  const navigate = useNavigate();


  //Boiler plate code that tells Toast where and how long to show for 
  const toastSettings = () => ({
      position: 'top-right',
      autoClose: 4000, // this means 4 seconds
      hideProgressBar: false,
      closeOnClick: true,
      pauseOnHover: true,
      draggable: true,
      progress: undefined,

  })

  const createAccount = (e) => {

    //TODO: This prevents the default form action of refreshing the page
    // it should also prevent the form elements from showing in the URL
    // but it doesnt so it needs to be fixed otherwise password is in plaintext in the URL lol 
    e.preventDefault();

    if (!email) {
      console.log("Email error!")
      toast.error("Email cannot be blank", toastSettings);
      return;
    } else if (!password) {
      
      toast.error("Password cannot be blank", toastSettings);
      return;
    } else if (!firstName) {
      
      toast.error("First name name cannot be blank", toastSettings);
      return;
    } else if (!lastName) {
      
      toast.error("Last name cannot be blank", toastSettings);
      return;
    }


  const auth = getAuth();
    createUserWithEmailAndPassword(auth, email, password)
    .then((userCredential) => {
    // Signed up

    //Pass the first name and last name to the user's display name
    const user = userCredential.user;

    //TODO: Strip whitespace and non alphabetical characters from the first and last name 
    user.displayName = firstName + " " + lastName;
    console.log("account successfully created!");

    

    navigate('/dashboard'); 

    // ...
    })

    .catch((error) => {
    const errorCode = error.code;
    const errorMessage = error.message;

    toast.error('Invalid email or password. Please try again.', toastSettings);

    // ..
    });
  }

  const signInAccount = (e) => {
    
    e.preventDefault(); 
    const auth = getAuth();
    signInWithEmailAndPassword(auth, email, password)
    .then((userCredential) => {



    // Signed in 
    const user = userCredential.user;
    toast.success('Succesfully signed in!', toastSettings);

    //Force a 2 second delay before redirection so the toast.success message shows lol 
    setTimeout(() => {
      navigate('/dashboard');
    }, 2000);
    
  })
  .catch((error) => {
    const errorCode = error.code;
    const errorMessage = error.message;

    toast.error('Invalid email or password. Please try again.', toastSettings);
  });

  }


  const [selectedLogInComponet, setSelectedLogIncomponent] = useState(true); 

  let contentToDisplay;


  const signUpClicked = (event) => {

    event.preventDefault();
    setSelectedLogIncomponent(false); 

  } 

  const logInClicked = (event) => {

    event.preventDefault(); 
    setSelectedLogIncomponent(true); 

  }

  if (selectedLogInComponet) {
    contentToDisplay = (
      <div>
        <div className="mt-8">
          <form>
            <div>
              <label htmlFor="email" className="block mb-2 text-sm text-gray-600 dark:text-gray-200">Email Address</label>
              <input onChange={(e) => setEmail(e.target.value)} type="email" name="email" id="email" placeholder="example@example.com" className="block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40" />
            </div>
    
            <div className="mt-6">
              <div className="flex justify-between mb-2">
                <label htmlFor="password" className="text-sm text-gray-600 dark:text-gray-200">Password</label>
                <a href="#" className="text-sm text-gray-400 focus:text-blue-500 hover:text-blue-500 hover:underline">Forgot password?</a>
              </div>
              <input onChange={(e) => setPassword(e.target.value)} type="password" name="password" id="password" placeholder="Your Password" className="block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40" />
            </div>
    
            <div className="mt-6">
              <button onClick={signInAccount} className="w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-blue-500 rounded-md hover:bg-blue-400 focus:outline-none focus:bg-blue-400 focus:ring focus:ring-blue-300 focus:ring-opacity-50">
                Sign In
              </button>
              <button onClick={signUpClicked}className="w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-gray-700 rounded-md hover:bg-gray-600 focus:outline-none focus:bg-blue-400 focus:ring focus:ring-blue-300 focus:ring-opacity-50 my-4">
                No account? Sign Up 
              </button>
            </div>
          </form>
          </div>

          <ToastContainer />
    
      </div>
    
  
    )


  } else {
    
    contentToDisplay = (
      <div> 

        <form>
          <div>

            <div className="flex space-x-4 mt-6 my-3">
            <div className="flex-1">
            <label htmlFor="f_name" className="block mb-2 text-sm text-gray-600 dark:text-gray-200">First Name</label>
            <input onChange={(e) => setFirstName(e.target.value)} type="f_name" name="f_name" id="f_name" placeholder="First Name" className="block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40" />
            </div>

            <div className="flex-1">
            <label htmlFor="l_name" className="block mb-2 text-sm text-gray-600 dark:text-gray-200">Last Name</label>
            <input onChange={(e) => setLastName(e.target.value)} type="l_name" name="l_name" id="l_name" placeholder="Last Name" className="block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40" />
            </div>
            </div>

            <label htmlFor="email" className="block mb-2 text-sm text-gray-600 dark:text-gray-200">Email Address</label>
            <input onChange={(e) => setEmail(e.target.value)} type="email" name="email" id="email" placeholder="example@example.com" className="block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40" />
          </div>
    
          <div className="mt-6">
            <div className="flex justify-between mb-2">
              <label htmlFor="password" className="text-sm text-gray-600 dark:text-gray-200">Password</label>
            </div>
            <input onChange={(e) => setPassword(e.target.value)} type="password" name="password" id="password" placeholder="Your Password" className="block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40" />
          </div>
    
          <div className="mt-6">
            <button onClick={createAccount} className="w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-blue-500 rounded-md hover:bg-blue-400 focus:outline-none focus:bg-blue-400 focus:ring focus:ring-blue-300 focus:ring-opacity-50">
              Create Account
            </button>
  
            <button onClick={logInClicked}className="w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-gray-700 rounded-md hover:bg-gray-600 focus:outline-none focus:bg-blue-400 focus:ring focus:ring-blue-300 focus:ring-opacity-50 my-4">
              Already have an account? 
            </button>
          </div>
        </form>

        <ToastContainer />
      </div>
      
    ) 
  
  }
  
  return (
    <div className="bg-white dark:bg-gray-900">
      <div className="flex justify-center h-screen">
        <div className="hidden bg-cover lg:block lg:w-2/3" style={{ backgroundImage: 'url(https://images.unsplash.com/photo-1616763355603-9755a640a287?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80)' }}>
          <div className="flex items-center h-full px-20 bg-gray-900 bg-opacity-40">
            <div>
              <h2 className="text-4xl font-bold text-white">Welcome to Betbetbonanza</h2>
              <p className="max-w-xl mt-3 text-gray-300"> All your betting needs, without the risk involved!</p>
            </div>
          </div>
        </div>

        <div className="flex items-center w-full max-w-md px-6 mx-auto lg:w-2/6">
          <div className="flex-1">
            <div className="text-center">
              <h2 className="text-4xl font-bold text-center text-gray-700 dark:text-white">Betbetbonanza</h2>
              <p className="mt-3 text-gray-500 dark:text-gray-300">Sign in to access your account</p>
            </div>

            {contentToDisplay}

          </div>
        </div>
      </div>
    </div>
  );
}

export default LogInComponent;
